package main

//6.1 数据加密
//采用单密钥的加密算法，我们称为对称加密。
//常见的单密钥加密算法有DES、AES、RC4等。

//采用双密钥的加密算法，我们称为非对称加密。
//由如下几个部分构成：需要加密的明文、加密算法、私钥和公钥
//常见的双密钥加密算法有RSA等。

//哈希算法是一种从任意数据中创建固定长度摘要信息的办法。一般我们要求，
//对于不同的数据，要求产生的摘要信息也是唯一的。
//常见的哈希算法包括MD5、SHA-1等。

//6.2 数字签名
//数字签名，是指用于标记数字文件拥有者、创造者、分发者身份的字符串。
//数字签名拥有标记文件身份、分发的不可抵赖性等作用。

//目前，常用的数字签名采用了非对称加密。例如，A公司发布了一个可执行文件，称为AProduct.exe，
// A在AProduct.exe中加入了A公司的数字签名。A公司的数字签名是用A公司的私钥加密了AProduct.exe文件的哈希值，
// 我们得到打过数字签名的AProduct.exe后，可以查看数字签名。

//这个过程实际上是用A公司的公钥解密了文件哈希值，从而可以验证两个问题：
// AProduct.exe是否由A公司发布，
// AProduct.exe是否被篡改。

//6.3 数字证书
//假设，我们登录某银行的网站，这时候网站会提示我们下载数字证书，否则将无法正常使用
//网银等功能。在我们首次使用U盾的时候，初始化过程即是向U盾中下载数字证书。那么，数字
//证书中包含什么呢？数字证书中包含了银行的公钥，有了公钥之后，网银就可以用公钥加密我们
//提供给银行的信息，这样只有银行才能用对应的私钥得到我们的信息，确保安全。

//6.4 PKI
//PKI，全称公钥基础设施，是使用非对称加密理论，提供数字签名、加密、数字证书等服务的体系，
// 一般包括权威认证机构（CA）、数字证书库、密钥备份及恢复系统、证书作废系统、应用接口（API）等。
//围绕PKI体系，建立了一些权威的、公益的机构。它们提供数字证书库、密钥备份及恢复系统、证书作废系统、应用接口等具体的服务。
// 比如，企业的数字证书，需要向认证机构申请，以确保数字证书的安全。

func main() {
	//hash1()
	//hash2()
	HttpsStart()
}
